@{
    ViewBag.Title = "Adventure Works";
}

<div class="jumbotron">
    <h1> Adventure Works </h1>
    <p class="lead"> Adventure works is a small online store dealing in sporting goods</p>
    <div class="row">
        <div class="col-md-3">

        <!--Link to the accessory category in the database, dynamic page-->
            <p><a class="btn btn-default" href='@Url.Action("Categories", "Home", new { Category = "Accessories" })'>&laquo; Accesories &raquo;</a></p>
        </div>
        <div class="col-md-3">

        <!--Link to the Bikes category in the database, dynamic page-->
            <p><a class="btn btn-default" href='@Url.Action("Categories", "Home", new { Category = "Bikes" })'>&laquo; Bikes &raquo;</a></p>
        </div>
        <div class="col-md-3">

        <!--Link to the Clothing category in the database, dynamic page-->
            <p><a class="btn btn-default" href='@Url.Action("Categories", "Home", new { Category = "Clothing" })'>&laquo; Clothing &raquo;</a></p>
        </div>

        <!--Link to the Components category in the database, dynamic page-->
        <div class="col-md-3">
            <p><a class="btn btn-default" href='@Url.Action("Categories", "Home", new { Category = "Components" })'>&laquo; Components &raquo;</a></p>
        </div>
    </div>
</div>

<h2>&raquo; This is a website to act as a database interface between Microsoft's AdventureWorks and our custom program.</h2><br />
<h4>In order to find an item, First select your category, your sub category, and then the Item you wish to view.</h4>
<br />
<h4>All pages are created dynamically based upon input and rely very little on hard coded functions.</h4>
<br />
<h4>For demonstration only, created by TJ Dennis for Fall 2017 CS460</h4>





